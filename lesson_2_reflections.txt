What happens when you initialize a repository? Why do you need to do it?
ans. We create a new empty repository or convert a unversioned project to a Git repository. Then we can save commit we have made in repositories.


How is the staging area different from the working directory and the repository? What value do you think it offers?
ans. Staging area is in between working directory and the repository. It provides more flexibility to commit changes in git repository and help us to choose more than one files to commit together if we want.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
ans. Branches are helpful in case when we want to try a new change just to test how it looks and works and has nothing to do with debugging. Branches helps in a way that we don't need to think about master branch when we are working on other branches and we can any mix them if we want.

How do the diagrams help you visualize the branch structure?
ans. Diagram help us remember the branches and also help to see how the branches are related.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
ans. When we merge two branhes together then all the changes and commits of both the branches are merged together. Then commits are arrangend according to the timestamp. It is good to represent it diagramatically because it helps us to know which changes are made at which part of time. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
ans. Git automatic merging is good in case when changes made in both the branches are different so it automatically chooses both lines and add them together in merged file. But in case when changes are made in same line in two different branches since they are seperated then it leads to a merge conflict, in that case it is good to solve it manually because coder who wrote the code can understand the code better because they have written the code.    