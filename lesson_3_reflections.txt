When would you want to use a remote repository rather than keeping all your work local?
ans. When there are more than one people working on the project.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
ans. Pulling manually is better because we might not want to pull all the changes which have been done in the branches.Or we might have bee also be woking on that branch in local computer because of which there can be a conflict.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
ans. One uses fork generally when he/she doesn't have permission to edit(or commit) the file so one can fork the file to their account from sombody elses's account and work on that or either clone the forked file to their computer and work from there but all new commits will be independent from where the file has been forked. Unlike forking, when you clone you actually copy the whole repository from GitHub or with in you computer and also can commit to the repository you have cloned from. Branches are used when one wants to try something new and do not want to disturb the old code and keep working on it seperately.

What is the benefit of having a copy of the last known state of the remote stored locally?
ans. When you clone from GitHub you get a local branch that points to the same commit as remote one but you also get a local copy of the last known state named remote_name/branch_name. It's good to store copy of your last known state locally because in case if you are working offline(for eg if you are in a plane) and you made some commits in your branch and some other person made a commit online then you can use "git fetch remote_name" to fetch the online commits which will be saved in local copy of your remote branch and the commit you made will not get effected. And you can use "git log" or "git diff" to find the difference and can merge it if you want to.
